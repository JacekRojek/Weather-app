{"version":3,"sources":["components/Form.js","components/Result.js","components/App.js","index.js"],"names":["Form","props","className","type","value","onChange","change","placeholder","Result","weather","date","city","sunrise","sunset","temp","pressure","humidity","clouds","wind","err","content","sunriseTime","Date","toLocaleTimeString","sunsetTime","App","state","handleInputChange","e","setState","target","prevProps","prevState","this","length","API","fetch","then","res","ok","Error","json","data","time","toLocaleString","sys","main","all","speed","catch","console","log","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.16684f51.chunk.js","sourcesContent":["import React from 'react';\nimport './form.css';\n\nconst Form = props => {\n  return (\n    <form>\n      <input\n        className=\"search-box\"\n        type=\"text\" \n        value={props.value}\n        onChange={props.change}\n        placeholder=\"enter city name\"\n        />\n    </form>\n  )\n}\n\nexport default Form\n","import React from 'react';\nimport './Result.css';\nimport './ResultRWD.css';\n\nconst Result = props => {\n\n  const { date, city, sunrise, sunset, temp, pressure, humidity, clouds, wind, err } = props.weather;\n  \n  let content = <>\n    <div className=\"\">\n      <h2>Find your city and check the weather.</h2>\n    </div>\n    </>;\n\n  if(!err && city) {\n\n    const sunriseTime = new Date(sunrise * 1000).toLocaleTimeString();\n    const sunsetTime = new Date(sunset * 1000).toLocaleTimeString();\n    content = (\n    <>\n    <div className=\"result-box\">\n      <div className=\"result-header\">\n        <div>{city}</div>\n        <div>{date}</div>\n      </div>\n      <div className=\"weather-details-container\">\n      <div className=\"weather-detail-box temp-box\">\n          <div className=\"temp-icon\"><i className=\"fas fa-thermometer-half\"></i></div>\n          <div className=\"temp-detail\">{temp} &#176;C</div>\n      </div>\n       <div className=\"weather-detail-box other-details\">\n         <div className=\"suntime\">\n            <div className=\"details-box\"><i className=\"fas fa-sort-up\"></i><i className=\"fas fa-sun\"></i> {sunriseTime}</div>\n            <div className=\"details-box\"><i className=\"fas fa-sort-down\"></i><i className=\"fas fa-sun\"></i> {sunsetTime}</div>\n         </div>\n         <div className=\"other-details-container\">\n            <div className=\"details-box\">\n              <i className=\"fab fa-cloudscale\"></i> {pressure} hPa\n            </div>\n            <div className=\"details-box\">\n              <i className=\"fas fa-tint\"></i> {humidity} %\n            </div>\n            <div className=\"details-box\">\n              <i className=\"fas fa-wind\"></i> {wind} m/s\n            </div>\n            <div className=\"details-box\">\n              <i className=\"fas fa-cloud\"></i> {clouds} %\n            </div>\n         </div>\n        </div>\n      </div>\n    </div>\n    </>\n    )\n  }\n  \n  return (\n<div className=\"result-container\">\n  {err ? `Not in database ${city}` : content}\n</div>\n  )\n}\n\nexport default Result;\n","import React, { Component } from 'react';\nimport Form from './Form';\nimport Result from './Result';\nimport './App.css';\n\nconst APIKey = 'f27143c9ba3302311a2c4596d74c5dc0'\n\nclass App extends Component {\n\n  state = {\n    value: '',\n    date: '',\n    city: '',\n    sunrise: '',\n    sunset: '',\n    temp: '',\n    pressure: '',\n    humidity: '',\n    clouds: '',\n    wind: '',\n    err: false\n  }\n\n  handleInputChange = e => {\n    this.setState({\n      value: e.target.value\n    })\n  }\n\n  componentDidUpdate(prevProps, prevState){\n    if(this.state.value.length === 0) return\n    if(prevState.value !== this.state.value) {\n    const API = \n    `http://api.openweathermap.org/data/2.5/weather?q=${this.state.value}&appid=${APIKey}&units=metric`;\n\n    fetch(API)\n    .then(res => {\n      if(res.ok){\n        return res\n      }\n      throw Error(\"failed to get data\")\n    })\n    .then(res => res.json())\n    .then(data => {\n      const time = new Date().toLocaleString();\n      this.setState(prevState => ({\n        err: false,\n        date: time,\n        sunrise: data.sys.sunrise,\n        sunset: data.sys.sunset,\n        temp: data.main.temp,\n        pressure: data.main.pressure,\n        humidity: data.main.humidity,\n        clouds: data.clouds.all,\n        wind: data.wind.speed,\n        city: prevState.value,\n      }))\n    })\n    .catch(err => {\n      console.log(err)\n      this.setState(prevState => ({\n        err: true,\n        city: prevState.value\n      }))\n    })\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"header-container\">\n          <h1>Weather App</h1>\n        </div>\n        <div className=\"searchBox-container\">\n        <Form \n        value={this.state.value} \n        change={this.handleInputChange}\n        />\n        </div>\n        <Result weather={this.state}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}